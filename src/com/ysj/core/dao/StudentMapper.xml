<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ysj.core.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.ysj.core.po.Student" >
    <id column="s_id" property="sId" jdbcType="VARCHAR" />
    <result column="s_name" property="sName" jdbcType="VARCHAR" />
    <result column="s_pwd" property="sPwd" jdbcType="VARCHAR" />
    <result column="s_class" property="sClass" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="dept" property="dept" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="batch" property="batch" jdbcType="SMALLINT" />
    <result column="s_state" property="sState" jdbcType="INTEGER" />
    <result column="major_id" property="majorId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    s_id, s_name, s_pwd, s_class, sex, age, dept, major, phone, email, batch, s_state, 
    major_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ysj.core.po.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student
    where s_id = #{sId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student
    where s_id = #{sId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ysj.core.po.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ysj.core.po.Student" >
    insert into student (s_id, s_name, s_pwd, 
      s_class, sex, age, dept, 
      major, phone, email, 
      batch, s_state, major_id
      )
    values (#{sId,jdbcType=VARCHAR}, #{sName,jdbcType=VARCHAR}, #{sPwd,jdbcType=VARCHAR}, 
      #{sClass,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{dept,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{batch,jdbcType=SMALLINT}, #{sState,jdbcType=INTEGER}, #{majorId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ysj.core.po.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sId != null" >
        s_id,
      </if>
      <if test="sName != null" >
        s_name,
      </if>
      <if test="sPwd != null" >
        s_pwd,
      </if>
      <if test="sClass != null" >
        s_class,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="dept != null" >
        dept,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="batch != null" >
        batch,
      </if>
      <if test="sState != null" >
        s_state,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sId != null" >
        #{sId,jdbcType=VARCHAR},
      </if>
      <if test="sName != null" >
        #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sPwd != null" >
        #{sPwd,jdbcType=VARCHAR},
      </if>
      <if test="sClass != null" >
        #{sClass,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="dept != null" >
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="batch != null" >
        #{batch,jdbcType=SMALLINT},
      </if>
      <if test="sState != null" >
        #{sState,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ysj.core.po.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.sId != null" >
        s_id = #{record.sId,jdbcType=VARCHAR},
      </if>
      <if test="record.sName != null" >
        s_name = #{record.sName,jdbcType=VARCHAR},
      </if>
      <if test="record.sPwd != null" >
        s_pwd = #{record.sPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.sClass != null" >
        s_class = #{record.sClass,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.dept != null" >
        dept = #{record.dept,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.batch != null" >
        batch = #{record.batch,jdbcType=SMALLINT},
      </if>
      <if test="record.sState != null" >
        s_state = #{record.sState,jdbcType=INTEGER},
      </if>
      <if test="record.majorId != null" >
        major_id = #{record.majorId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set s_id = #{record.sId,jdbcType=VARCHAR},
      s_name = #{record.sName,jdbcType=VARCHAR},
      s_pwd = #{record.sPwd,jdbcType=VARCHAR},
      s_class = #{record.sClass,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      dept = #{record.dept,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      batch = #{record.batch,jdbcType=SMALLINT},
      s_state = #{record.sState,jdbcType=INTEGER},
      major_id = #{record.majorId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ysj.core.po.Student" >
    update student
    <set >
      <if test="sName != null" >
        s_name = #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sPwd != null" >
        s_pwd = #{sPwd,jdbcType=VARCHAR},
      </if>
      <if test="sClass != null" >
        s_class = #{sClass,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="dept != null" >
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="batch != null" >
        batch = #{batch,jdbcType=SMALLINT},
      </if>
      <if test="sState != null" >
        s_state = #{sState,jdbcType=INTEGER},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=VARCHAR},
      </if>
    </set>
    where s_id = #{sId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ysj.core.po.Student" >
    update student
    set s_name = #{sName,jdbcType=VARCHAR},
      s_pwd = #{sPwd,jdbcType=VARCHAR},
      s_class = #{sClass,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      dept = #{dept,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      batch = #{batch,jdbcType=SMALLINT},
      s_state = #{sState,jdbcType=INTEGER},
      major_id = #{majorId,jdbcType=VARCHAR}
    where s_id = #{sId,jdbcType=VARCHAR}
  </update>
  <select id="findStudnetBySeltitlState" resultMap="BaseResultMap">
  select * from student where major = #{major} and s_id not in (select s_id from select_title where seltitl_state='同意' or seltitl_state='待同意')
  </select>
  <update id="editInfo1">
  update student set dept = #{deptName} where dept = #{oldName}
  </update>
  <update id="editInfo2">
  update student set major = #{majorName} where major_id = #{majorId}
  </update>
</mapper>